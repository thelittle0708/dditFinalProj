<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- kr.or.ddit.aop 패키지를 컴포넌트 스캔 대상으로 등록 -->
    <context:component-scan base-package="kr.or.ddit">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
    <!-- AOP 활성화 -->
<!--     <aop:aspectj-autoproxy></aop:aspectj-autoproxy> -->

    <!-- Root Context: defines shared resources visible to all other web components -->
    <!-- root-context.xml : 스프링 설정 파일

    스프링 설정?
    view와 관련되지 않은 객체를 정의     // view와 관련된 것은 servlet-context에서 했음
    Service(기능), DAO(Repository : 저장소), DB등 비즈니스 로직과 관련된 설정
    BasicDataSource data Source = new BasicDataSource();
    dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
    -->
    <!-- dataSource 자바빈(객체) : 데이터베이스와 관련된 정보를 설정 -->
    <bean id="dataSource"
          class="org.apache.commons.dbcp2.BasicDataSource"
          destroy-method="close">
        <property name="DriverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@112.220.114.130:1521:xe"/>
        <property name="username" value="team3_202212F"/>
        <property name="password" value="java"/>
    </bean>
    <!-- 데이터베이스와 연결을 맺고 끊어질 때까지의 라이프 사이클을 관리해주는 sqlSession 객체를 생성
    1) dataSource
    2) 매퍼XML의 위치 지정. / : src/main/resources
     -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 매퍼 XML
        classpath : src/main/resources
        -->
        <property name="mapperLocations" value="classpath:/sqlmap/**/*_SQL.xml"/>
        <property name="configLocation" value="/WEB-INF/mybatisAlias/mybatisAlias.xml"/>
    </bean>
    <!-- 데이터베이스에 개별적으로 쿼리를 실행시키는 객체. 이 객체를 통해 query를 실행함 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    

    <!-- 트랜잭션 관리자의 빈을 정의 -->
<!-- 	<tx:annotation-driven transaction-manager="transactionManager"/> -->
    
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	   <tx:attributes>	 
	       <tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
	   </tx:attributes>
	</tx:advice>
    
	<aop:config>
		<aop:pointcut id="requiredTx" expression="execution(* kr.or.ddit..*Impl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="requiredTx" />
	</aop:config>

    <!-- 파일업로드 설정 시작 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 파일업로드 용량 (10MB)-->
        <property name="maxUploadSize" value="10485760"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
    <!-- 파일업로드 디렉토리 설정 -->
    <bean id="uploadPath" class="java.lang.String">
        <constructor-arg value="C:\\upload"/>
    </bean>
    <!-- 파일업로드 설정 끝 -->
    <!-- Mapper 인터페이스 설정
        개발자가 직접 DAO를 설정하지 않아도(sqlSessiontemplate.insert("namespace.id",파라미터) <-이거 안해도)
        자동으로 Mapper 인터페이스를 활용하는 객체를 생성하게 됨
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="kr.or.ddit.**.mapper,kr.or.ddit.**.**.mapper"/>
    </bean>

</beans>
